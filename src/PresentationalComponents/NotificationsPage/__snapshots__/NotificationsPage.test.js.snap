// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NotificationsPage expect to render  1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotificationsPage
    rightBar="right"
    title="Something"
  >
    content
  </NotificationsPage>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <PageHeader>
          <Split
            className=""
            component="div"
            gutter={null}
          >
            <SplitItem
              className=""
              isMain={true}
            >
              <Breadcrumb
                aria-label="Breadcrumb"
                className=""
              >
                
                <BreadcrumbItem
                  className=""
                  component="a"
                  isActive={true}
                  target={null}
                  to={null}
                >
                  Something
                </BreadcrumbItem>
              </Breadcrumb>
              <PageHeaderTitle
                title="Something"
              />
            </SplitItem>
            <SplitItem
              className=""
              isMain={false}
            >
              right
            </SplitItem>
          </Split>
        </PageHeader>,
        <Connect(Main)>
          content
        </Connect(Main)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Split
            className=""
            component="div"
            gutter={null}
          >
            <SplitItem
              className=""
              isMain={true}
            >
              <Breadcrumb
                aria-label="Breadcrumb"
                className=""
              >
                
                <BreadcrumbItem
                  className=""
                  component="a"
                  isActive={true}
                  target={null}
                  to={null}
                >
                  Something
                </BreadcrumbItem>
              </Breadcrumb>
              <PageHeaderTitle
                title="Something"
              />
            </SplitItem>
            <SplitItem
              className=""
              isMain={false}
            >
              right
            </SplitItem>
          </Split>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <SplitItem
                className=""
                isMain={true}
              >
                <Breadcrumb
                  aria-label="Breadcrumb"
                  className=""
                >
                  
                  <BreadcrumbItem
                    className=""
                    component="a"
                    isActive={true}
                    target={null}
                    to={null}
                  >
                    Something
                  </BreadcrumbItem>
                </Breadcrumb>
                <PageHeaderTitle
                  title="Something"
                />
              </SplitItem>,
              <SplitItem
                className=""
                isMain={false}
              >
                right
              </SplitItem>,
            ],
            "className": "",
            "component": "div",
            "gutter": null,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Breadcrumb
                    aria-label="Breadcrumb"
                    className=""
                  >
                    
                    <BreadcrumbItem
                      className=""
                      component="a"
                      isActive={true}
                      target={null}
                      to={null}
                    >
                      Something
                    </BreadcrumbItem>
                  </Breadcrumb>,
                  <PageHeaderTitle
                    title="Something"
                  />,
                ],
                "className": "",
                "isMain": true,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "aria-label": "Breadcrumb",
                    "children": Array [
                      "",
                      <BreadcrumbItem
                        className=""
                        component="a"
                        isActive={true}
                        target={null}
                        to={null}
                      >
                        Something
                      </BreadcrumbItem>,
                    ],
                    "className": "",
                  },
                  "ref": null,
                  "rendered": Array [
                    "",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Something",
                        "className": "",
                        "component": "a",
                        "isActive": true,
                        "target": null,
                        "to": null,
                      },
                      "ref": null,
                      "rendered": "Something",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "title": "Something",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "right",
                "className": "",
                "isMain": false,
              },
              "ref": null,
              "rendered": "right",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "content",
        },
        "ref": null,
        "rendered": "content",
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <PageHeader>
            <Split
              className=""
              component="div"
              gutter={null}
            >
              <SplitItem
                className=""
                isMain={true}
              >
                <Breadcrumb
                  aria-label="Breadcrumb"
                  className=""
                >
                  
                  <BreadcrumbItem
                    className=""
                    component="a"
                    isActive={true}
                    target={null}
                    to={null}
                  >
                    Something
                  </BreadcrumbItem>
                </Breadcrumb>
                <PageHeaderTitle
                  title="Something"
                />
              </SplitItem>
              <SplitItem
                className=""
                isMain={false}
              >
                right
              </SplitItem>
            </Split>
          </PageHeader>,
          <Connect(Main)>
            content
          </Connect(Main)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Split
              className=""
              component="div"
              gutter={null}
            >
              <SplitItem
                className=""
                isMain={true}
              >
                <Breadcrumb
                  aria-label="Breadcrumb"
                  className=""
                >
                  
                  <BreadcrumbItem
                    className=""
                    component="a"
                    isActive={true}
                    target={null}
                    to={null}
                  >
                    Something
                  </BreadcrumbItem>
                </Breadcrumb>
                <PageHeaderTitle
                  title="Something"
                />
              </SplitItem>
              <SplitItem
                className=""
                isMain={false}
              >
                right
              </SplitItem>
            </Split>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <SplitItem
                  className=""
                  isMain={true}
                >
                  <Breadcrumb
                    aria-label="Breadcrumb"
                    className=""
                  >
                    
                    <BreadcrumbItem
                      className=""
                      component="a"
                      isActive={true}
                      target={null}
                      to={null}
                    >
                      Something
                    </BreadcrumbItem>
                  </Breadcrumb>
                  <PageHeaderTitle
                    title="Something"
                  />
                </SplitItem>,
                <SplitItem
                  className=""
                  isMain={false}
                >
                  right
                </SplitItem>,
              ],
              "className": "",
              "component": "div",
              "gutter": null,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Breadcrumb
                      aria-label="Breadcrumb"
                      className=""
                    >
                      
                      <BreadcrumbItem
                        className=""
                        component="a"
                        isActive={true}
                        target={null}
                        to={null}
                      >
                        Something
                      </BreadcrumbItem>
                    </Breadcrumb>,
                    <PageHeaderTitle
                      title="Something"
                    />,
                  ],
                  "className": "",
                  "isMain": true,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "aria-label": "Breadcrumb",
                      "children": Array [
                        "",
                        <BreadcrumbItem
                          className=""
                          component="a"
                          isActive={true}
                          target={null}
                          to={null}
                        >
                          Something
                        </BreadcrumbItem>,
                      ],
                      "className": "",
                    },
                    "ref": null,
                    "rendered": Array [
                      "",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": "Something",
                          "className": "",
                          "component": "a",
                          "isActive": true,
                          "target": null,
                          "to": null,
                        },
                        "ref": null,
                        "rendered": "Something",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "title": "Something",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "right",
                  "className": "",
                  "isMain": false,
                },
                "ref": null,
                "rendered": "right",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "content",
          },
          "ref": null,
          "rendered": "content",
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
