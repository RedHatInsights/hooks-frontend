// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NotificationEdit expect to render a Form 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotificationEdit
    createEndpoint={[MockFunction]}
    fetchEndpoint={
      [MockFunction] {
        "calls": Array [
          Array [
            "1",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    match={
      Object {
        "params": Object {
          "endpointId": "1",
        },
      }
    }
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    updateEndpoint={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <LoadingState
        placeholder={
          <Skeleton
            size="sm"
          />
        }
      >
        <Form
          ErrorList={[Function]}
          FieldTemplate={[Function]}
          className="pf-c-form"
          disabled={false}
          formData={Object {}}
          liveValidate={false}
          noHtml5Validate={false}
          noValidate={false}
          onChange={[Function]}
          onSubmit={[Function]}
          safeRenderCompletion={false}
          schema={
            Object {
              "properties": Object {
                "active": Object {
                  "default": true,
                  "title": "Active",
                  "type": "boolean",
                },
                "name": Object {
                  "title": "Name",
                  "type": "string",
                },
                "url": Object {
                  "title": "URL",
                  "type": "string",
                },
              },
              "required": Array [
                "name",
                "url",
              ],
              "title": "Edit Notifications",
              "type": "object",
            }
          }
          uiSchema={
            Object {
              "name": Object {
                "ui:placeholder": "New notification endpoint name",
              },
              "url": Object {
                "ui:placeholder": "https://...",
              },
            }
          }
        />
      </LoadingState>,
      "title": "Edit Notification",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Form
          ErrorList={[Function]}
          FieldTemplate={[Function]}
          className="pf-c-form"
          disabled={false}
          formData={Object {}}
          liveValidate={false}
          noHtml5Validate={false}
          noValidate={false}
          onChange={[Function]}
          onSubmit={[Function]}
          safeRenderCompletion={false}
          schema={
            Object {
              "properties": Object {
                "active": Object {
                  "default": true,
                  "title": "Active",
                  "type": "boolean",
                },
                "name": Object {
                  "title": "Name",
                  "type": "string",
                },
                "url": Object {
                  "title": "URL",
                  "type": "string",
                },
              },
              "required": Array [
                "name",
                "url",
              ],
              "title": "Edit Notifications",
              "type": "object",
            }
          }
          uiSchema={
            Object {
              "name": Object {
                "ui:placeholder": "New notification endpoint name",
              },
              "url": Object {
                "ui:placeholder": "https://...",
              },
            }
          }
        />,
        "loading": undefined,
        "placeholder": <Skeleton
          size="sm"
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "ErrorList": [Function],
          "FieldTemplate": [Function],
          "className": "pf-c-form",
          "disabled": false,
          "formData": Object {},
          "liveValidate": false,
          "noHtml5Validate": false,
          "noValidate": false,
          "onChange": [Function],
          "onSubmit": [Function],
          "safeRenderCompletion": false,
          "schema": Object {
            "properties": Object {
              "active": Object {
                "default": true,
                "title": "Active",
                "type": "boolean",
              },
              "name": Object {
                "title": "Name",
                "type": "string",
              },
              "url": Object {
                "title": "URL",
                "type": "string",
              },
            },
            "required": Array [
              "name",
              "url",
            ],
            "title": "Edit Notifications",
            "type": "object",
          },
          "uiSchema": Object {
            "name": Object {
              "ui:placeholder": "New notification endpoint name",
            },
            "url": Object {
              "ui:placeholder": "https://...",
            },
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <LoadingState
          placeholder={
            <Skeleton
              size="sm"
            />
          }
        >
          <Form
            ErrorList={[Function]}
            FieldTemplate={[Function]}
            className="pf-c-form"
            disabled={false}
            formData={Object {}}
            liveValidate={false}
            noHtml5Validate={false}
            noValidate={false}
            onChange={[Function]}
            onSubmit={[Function]}
            safeRenderCompletion={false}
            schema={
              Object {
                "properties": Object {
                  "active": Object {
                    "default": true,
                    "title": "Active",
                    "type": "boolean",
                  },
                  "name": Object {
                    "title": "Name",
                    "type": "string",
                  },
                  "url": Object {
                    "title": "URL",
                    "type": "string",
                  },
                },
                "required": Array [
                  "name",
                  "url",
                ],
                "title": "Edit Notifications",
                "type": "object",
              }
            }
            uiSchema={
              Object {
                "name": Object {
                  "ui:placeholder": "New notification endpoint name",
                },
                "url": Object {
                  "ui:placeholder": "https://...",
                },
              }
            }
          />
        </LoadingState>,
        "title": "Edit Notification",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Form
            ErrorList={[Function]}
            FieldTemplate={[Function]}
            className="pf-c-form"
            disabled={false}
            formData={Object {}}
            liveValidate={false}
            noHtml5Validate={false}
            noValidate={false}
            onChange={[Function]}
            onSubmit={[Function]}
            safeRenderCompletion={false}
            schema={
              Object {
                "properties": Object {
                  "active": Object {
                    "default": true,
                    "title": "Active",
                    "type": "boolean",
                  },
                  "name": Object {
                    "title": "Name",
                    "type": "string",
                  },
                  "url": Object {
                    "title": "URL",
                    "type": "string",
                  },
                },
                "required": Array [
                  "name",
                  "url",
                ],
                "title": "Edit Notifications",
                "type": "object",
              }
            }
            uiSchema={
              Object {
                "name": Object {
                  "ui:placeholder": "New notification endpoint name",
                },
                "url": Object {
                  "ui:placeholder": "https://...",
                },
              }
            }
          />,
          "loading": undefined,
          "placeholder": <Skeleton
            size="sm"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "ErrorList": [Function],
            "FieldTemplate": [Function],
            "className": "pf-c-form",
            "disabled": false,
            "formData": Object {},
            "liveValidate": false,
            "noHtml5Validate": false,
            "noValidate": false,
            "onChange": [Function],
            "onSubmit": [Function],
            "safeRenderCompletion": false,
            "schema": Object {
              "properties": Object {
                "active": Object {
                  "default": true,
                  "title": "Active",
                  "type": "boolean",
                },
                "name": Object {
                  "title": "Name",
                  "type": "string",
                },
                "url": Object {
                  "title": "URL",
                  "type": "string",
                },
              },
              "required": Array [
                "name",
                "url",
              ],
              "title": "Edit Notifications",
              "type": "object",
            },
            "uiSchema": Object {
              "name": Object {
                "ui:placeholder": "New notification endpoint name",
              },
              "url": Object {
                "ui:placeholder": "https://...",
              },
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`NotificationEdit takes an endpoint 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotificationEdit
    createEndpoint={[MockFunction]}
    endpoint={
      Object {
        "active": false,
        "filtersCount": 4,
        "id": 3,
        "name": "TEST Endpoint #3",
        "url": "http://endpoint3.com",
      }
    }
    fetchEndpoint={
      [MockFunction] {
        "calls": Array [
          Array [
            "1",
          ],
          Array [
            "1",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    match={
      Object {
        "params": Object {
          "endpointId": "1",
        },
      }
    }
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    updateEndpoint={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <LoadingState
        placeholder={
          <Skeleton
            size="sm"
          />
        }
      >
        <Form
          ErrorList={[Function]}
          FieldTemplate={[Function]}
          className="pf-c-form"
          disabled={false}
          formData={
            Object {
              "active": false,
              "name": "TEST Endpoint #3",
              "url": "http://endpoint3.com",
            }
          }
          liveValidate={false}
          noHtml5Validate={false}
          noValidate={false}
          onChange={[Function]}
          onSubmit={[Function]}
          safeRenderCompletion={false}
          schema={
            Object {
              "properties": Object {
                "active": Object {
                  "default": true,
                  "title": "Active",
                  "type": "boolean",
                },
                "name": Object {
                  "title": "Name",
                  "type": "string",
                },
                "url": Object {
                  "title": "URL",
                  "type": "string",
                },
              },
              "required": Array [
                "name",
                "url",
              ],
              "title": "Edit Notifications",
              "type": "object",
            }
          }
          uiSchema={
            Object {
              "name": Object {
                "ui:placeholder": "New notification endpoint name",
              },
              "url": Object {
                "ui:placeholder": "https://...",
              },
            }
          }
        />
      </LoadingState>,
      "title": "Edit Notification",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Form
          ErrorList={[Function]}
          FieldTemplate={[Function]}
          className="pf-c-form"
          disabled={false}
          formData={
            Object {
              "active": false,
              "name": "TEST Endpoint #3",
              "url": "http://endpoint3.com",
            }
          }
          liveValidate={false}
          noHtml5Validate={false}
          noValidate={false}
          onChange={[Function]}
          onSubmit={[Function]}
          safeRenderCompletion={false}
          schema={
            Object {
              "properties": Object {
                "active": Object {
                  "default": true,
                  "title": "Active",
                  "type": "boolean",
                },
                "name": Object {
                  "title": "Name",
                  "type": "string",
                },
                "url": Object {
                  "title": "URL",
                  "type": "string",
                },
              },
              "required": Array [
                "name",
                "url",
              ],
              "title": "Edit Notifications",
              "type": "object",
            }
          }
          uiSchema={
            Object {
              "name": Object {
                "ui:placeholder": "New notification endpoint name",
              },
              "url": Object {
                "ui:placeholder": "https://...",
              },
            }
          }
        />,
        "loading": undefined,
        "placeholder": <Skeleton
          size="sm"
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "ErrorList": [Function],
          "FieldTemplate": [Function],
          "className": "pf-c-form",
          "disabled": false,
          "formData": Object {
            "active": false,
            "name": "TEST Endpoint #3",
            "url": "http://endpoint3.com",
          },
          "liveValidate": false,
          "noHtml5Validate": false,
          "noValidate": false,
          "onChange": [Function],
          "onSubmit": [Function],
          "safeRenderCompletion": false,
          "schema": Object {
            "properties": Object {
              "active": Object {
                "default": true,
                "title": "Active",
                "type": "boolean",
              },
              "name": Object {
                "title": "Name",
                "type": "string",
              },
              "url": Object {
                "title": "URL",
                "type": "string",
              },
            },
            "required": Array [
              "name",
              "url",
            ],
            "title": "Edit Notifications",
            "type": "object",
          },
          "uiSchema": Object {
            "name": Object {
              "ui:placeholder": "New notification endpoint name",
            },
            "url": Object {
              "ui:placeholder": "https://...",
            },
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <LoadingState
          placeholder={
            <Skeleton
              size="sm"
            />
          }
        >
          <Form
            ErrorList={[Function]}
            FieldTemplate={[Function]}
            className="pf-c-form"
            disabled={false}
            formData={
              Object {
                "active": false,
                "name": "TEST Endpoint #3",
                "url": "http://endpoint3.com",
              }
            }
            liveValidate={false}
            noHtml5Validate={false}
            noValidate={false}
            onChange={[Function]}
            onSubmit={[Function]}
            safeRenderCompletion={false}
            schema={
              Object {
                "properties": Object {
                  "active": Object {
                    "default": true,
                    "title": "Active",
                    "type": "boolean",
                  },
                  "name": Object {
                    "title": "Name",
                    "type": "string",
                  },
                  "url": Object {
                    "title": "URL",
                    "type": "string",
                  },
                },
                "required": Array [
                  "name",
                  "url",
                ],
                "title": "Edit Notifications",
                "type": "object",
              }
            }
            uiSchema={
              Object {
                "name": Object {
                  "ui:placeholder": "New notification endpoint name",
                },
                "url": Object {
                  "ui:placeholder": "https://...",
                },
              }
            }
          />
        </LoadingState>,
        "title": "Edit Notification",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Form
            ErrorList={[Function]}
            FieldTemplate={[Function]}
            className="pf-c-form"
            disabled={false}
            formData={
              Object {
                "active": false,
                "name": "TEST Endpoint #3",
                "url": "http://endpoint3.com",
              }
            }
            liveValidate={false}
            noHtml5Validate={false}
            noValidate={false}
            onChange={[Function]}
            onSubmit={[Function]}
            safeRenderCompletion={false}
            schema={
              Object {
                "properties": Object {
                  "active": Object {
                    "default": true,
                    "title": "Active",
                    "type": "boolean",
                  },
                  "name": Object {
                    "title": "Name",
                    "type": "string",
                  },
                  "url": Object {
                    "title": "URL",
                    "type": "string",
                  },
                },
                "required": Array [
                  "name",
                  "url",
                ],
                "title": "Edit Notifications",
                "type": "object",
              }
            }
            uiSchema={
              Object {
                "name": Object {
                  "ui:placeholder": "New notification endpoint name",
                },
                "url": Object {
                  "ui:placeholder": "https://...",
                },
              }
            }
          />,
          "loading": undefined,
          "placeholder": <Skeleton
            size="sm"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "ErrorList": [Function],
            "FieldTemplate": [Function],
            "className": "pf-c-form",
            "disabled": false,
            "formData": Object {
              "active": false,
              "name": "TEST Endpoint #3",
              "url": "http://endpoint3.com",
            },
            "liveValidate": false,
            "noHtml5Validate": false,
            "noValidate": false,
            "onChange": [Function],
            "onSubmit": [Function],
            "safeRenderCompletion": false,
            "schema": Object {
              "properties": Object {
                "active": Object {
                  "default": true,
                  "title": "Active",
                  "type": "boolean",
                },
                "name": Object {
                  "title": "Name",
                  "type": "string",
                },
                "url": Object {
                  "title": "URL",
                  "type": "string",
                },
              },
              "required": Array [
                "name",
                "url",
              ],
              "title": "Edit Notifications",
              "type": "object",
            },
            "uiSchema": Object {
              "name": Object {
                "ui:placeholder": "New notification endpoint name",
              },
              "url": Object {
                "ui:placeholder": "https://...",
              },
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
